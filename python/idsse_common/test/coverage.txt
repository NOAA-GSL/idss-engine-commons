============================= test session starts ==============================
platform linux -- Python 3.11.7, pytest-7.4.4, pluggy-1.4.0
rootdir: /home/runner/work/idss-engine-commons/idss-engine-commons/python/idsse_common
plugins: cov-4.1.0
collected 212 items

test/test_aws_utils.py ..................                                [  8%]
test/test_config.py ............                                         [ 14%]
test/test_geo_image.py ........F............                             [ 24%]
test/test_grid_proj.py ........................                          [ 35%]
test/test_json_message.py ...........                                    [ 40%]
test/test_log_util.py .....                                              [ 42%]
test/test_netcdf_io.py ....                                              [ 44%]
test/test_path_builder.py ......................                         [ 55%]
test/test_publish_confirm.py .........                                   [ 59%]
test/test_rabbitmq_utils.py ......                                       [ 62%]
test/test_utils.py ........................                              [ 73%]
test/test_validate_criteria_schema.py ......                             [ 76%]
test/test_validate_das_schema.py ..............                          [ 83%]
test/test_validate_das_web_schema.py .........                           [ 87%]
test/test_validate_event_port_schema.py .....                            [ 89%]
test/test_validate_new_data_schema.py .........                          [ 93%]
test/test_vectaster.py .............                                     [100%]

=================================== FAILURES ===================================
____________________________ test_draw_geo_polygon _____________________________

proj = <idsse.common.grid_proj.GridProj object at 0x7f887dcf9b10>

    def test_draw_geo_polygon(proj):
        scale = 10
        width, height = 5, 5
        data = numpy.zeros((height, width))
        geo_image = GeoImage.from_data_grid(proj, data, scale=scale)
    
        lon_lat_1 = proj.map_pixel_to_geo(1.3, 1.9)
        lon_lat_2 = proj.map_pixel_to_geo(3.5, 2.7)
        lon_lat_3 = proj.map_pixel_to_geo(3.0, 1.5)
        poly_wkt = (f'POLYGON(({lon_lat_1[0]} {lon_lat_1[1]}, {lon_lat_2[0]} {lon_lat_2[1]}, '
                    f'{lon_lat_3[0]} {lon_lat_3[1]}, {lon_lat_1[0]} {lon_lat_1[1]}))')
    
        geo_image.draw_shape(poly_wkt, (0, 0, 100))
    
        values, indices, counts = numpy.unique(geo_image.rgb_array,
                                               return_inverse=True,
                                               return_counts=True)
    
        # values will be 0 or 100 (for polygon) and 0 everywhere else
        numpy.testing.assert_array_equal(values, [0, 100])
>       numpy.testing.assert_array_equal(counts, [7392, 108])

test/test_geo_image.py:232: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<built-in function eq>, array([7385,  115]), [7392, 108])
kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Arrays are not equal
E           
E           Mismatched elements: 2 / 2 (100%)
E           Max absolute difference: 7
E           Max relative difference: 0.06481481
E            x: array([7385,  115])
E            y: array([7392,  108])

/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/contextlib.py:81: AssertionError
=============================== warnings summary ===============================
idsse/common/validate_schema.py:15
idsse/common/validate_schema.py:15
  /home/runner/work/idss-engine-commons/idss-engine-commons/python/idsse_common/idsse/common/validate_schema.py:15: DeprecationWarning: jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
    from jsonschema import FormatChecker, RefResolver  # pylint: disable=no-name-in-module

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
- generated xml file: /home/runner/work/idss-engine-commons/idss-engine-commons/python/idsse_common/test/pytest.xml -

---------- coverage: platform linux, python 3.11.7-final-0 -----------
Name                              Stmts   Miss  Cover
-----------------------------------------------------
idsse/common/__init__.py              0      0   100%
idsse/common/aws_utils.py            86      5    94%
idsse/common/config.py               68      8    88%
idsse/common/geo_image.py           219     14    94%
idsse/common/grid_proj.py           112      2    98%
idsse/common/json_message.py         23      1    96%
idsse/common/log_util.py             43      3    93%
idsse/common/netcdf_io.py            47      0   100%
idsse/common/path_builder.py        128     10    92%
idsse/common/publish_confirm.py     151     13    91%
idsse/common/rabbitmq_utils.py       61      0   100%
idsse/common/utils.py               103     14    86%
idsse/common/validate_schema.py      40      0   100%
idsse/common/vectaster.py           193     31    84%
-----------------------------------------------------
TOTAL                              1274    101    92%

=========================== short test summary info ============================
FAILED test/test_geo_image.py::test_draw_geo_polygon - AssertionError: 
Arrays are not equal

Mismatched elements: 2 / 2 (100%)
Max absolute difference: 7
Max relative difference: 0.06481481
 x: array([7385,  115])
 y: array([7392,  108])
================== 1 failed, 211 passed, 2 warnings in 5.03s ===================
